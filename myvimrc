set nocompatible              " be iMproved

" 设置文件格式
set fileformats=unix,dos

" 设置编码方式
set encoding=utf-8
set fenc=utf-8
set fileencodings=utf-8,cp936,ucs-bom

" 字符色彩
syntax on

" 设置缩进
" Set tabstop to tell vim how many columns a tab counts for.
set tabstop=4
" - Set shiftwidth to control how many columns text is indented with
"    the reindent operations (<< and >>) and automatic C-style indentation
" - Set softtabstop to control how many columns vim uses when you hit Tab in insert mode. 
set shiftwidth=4 softtabstop=4
" When expandtab is set, hitting Tab in insert mode will produce the
" appropriate number of spaces.
set expandtab

" Java/Javascript/python 1 tab = 4 spaces 
autocmd Filetype java setlocal tabstop=4 shiftwidth=4 softtabstop=4 expandtab
autocmd Filetype javascript setlocal tabstop=4 shiftwidth=4 softtabstop=4 expandtab
autocmd Filetype phthon setlocal tabstop=4 shiftwidth=4 softtabstop=4 expandtab

" ruby/scala 1 tab = 2 spaces 
autocmd Filetype ruby setlocal tabstop=2 shiftwidth=2 softtabstop=2 expandtab
autocmd Filetype scala setlocal tabstop=2 shiftwidth=2 softtabstop=2 expandtab

" 设置注释
set autoindent 
set smartindent shiftround

" 显示行号
set number

" 设置状态显示
set laststatus=2

" 命令回显
set showcmd
set ruler

" 设置搜索
set hlsearch
set ignorecase
set incsearch
nmap <silent> <BS> :nohlsearch<CR>

" 设置颜色主题
syntax enable
set background=dark
colorscheme solarized

" show spaces/tabs, etc.
set listchars=eol:¬,tab:>-,trail:~,extends:>,precedes:<,space:·
set list

" 禁用方向键
"map <up> <nop>
"map <down> <nop>
"map <left> <nop>
"map <right> <nop>

" 搜索时正则表达式
nnoremap / /\v

" 打开文件回到上次关闭的位置
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

" 增加%命令支持的配对
set matchpairs+=<:>

" 移动出当前行
set whichwrap+=<,>,h,l,[,] " Wrap arrow keys between lines

" 读入c/cpp/java文件时自动打开Taglist
"autocmd BufReadPost *.h,*.c,*.cpp,*.java exe(":Tlist")

" 光标线
"set cursorcolumn
set cursorline
autocmd Filetype python setlocal cursorcolumn

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" 将leader键改为逗号
let mapleader = ','

" 分屏窗口切换改键
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" 重新加载vimrc
noremap <silent> <leader>V :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

" PASTE模式快捷键设置为F2
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>

" diff时使用竖直分屏
set diffopt+=vertical

" md is markdown
autocmd BufRead,BufNewFile *.md set filetype=markdown

" markdown文件打开拼写检查
"autocmd BufRead,BufNewFile *.md set spell

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" file type extension
autocmd BufRead,BufNewFile *.scala set filetype=scala

" 自动填充文件头
autocmd BufNewFile *.py exec ":call SetFileHead()"
func SetFileHead()
    if &filetype == 'python'
        call append(0, '#!/usr/bin/env python2')
        call append(1, '## -*- coding: utf-8 -*-')
    endif
endfunc

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/Vundle.vim'

" My bundles here:
"
" original repos on GitHub
Plugin 'tpope/vim-fugitive'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-rails.git'
Plugin 'tpope/vim-commentary.git'
" vim-scripts repos
Plugin 'L9'
Plugin 'FuzzyFinder'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown.git' 
" non-GitHub repos
""""""""git repo"""""""""""""""
Plugin 'wincent/command-t'
Plugin 'scrooloose/nerdtree'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'Lokaltog/vim-powerline'
"precision color scheme for multiple applications (terminal, vim, etc.)
Plugin 'altercation/vim-colors-solarized'
"Vim plugin, provides insert mode auto-completion for quotes, parens, brackets
Plugin 'Raimondi/delimitMate'

" All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on     " required!

""""""""""""YCM""""""""""""""""""""
"configuration file
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_confirm_extra_conf = 0
"This option controls for which Vim filetypes should YCM be turned on
let g:ycm_filetype_whitelist = { '*': 1 }
"This option controls for which Vim filetypes should YCM be turned off
let g:ycm_filetype_blacklist = {
      \ 'tagbar' : 1,
      \ 'qf' : 1,
      \ 'notes' : 1,
      \ 'markdown' : 1,
      \ 'unite' : 1,
      \ 'text' : 1,
      \ 'vimwiki' : 1,
      \ 'pandoc' : 1,
      \ 'infolog' : 1,
      \ 'mail' : 1
      \}
nnoremap <C-i> : YcmCompleter GoTo<CR>
nnoremap <F5> : YcmForceCompileAndDiagnostics<CR><CR>

"""""""""""syntastic""""""""""""
let g:syntastic_check_on_open = 1
let g:syntastic_cpp_include_dirs = ['/usr/include/']
let g:syntastic_cpp_remove_include_errors = 1
let g:syntastic_cpp_check_header = 1
let g:syntastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = '-std=c++11 -stdlib=libstdc++'
"set error or warning signs
let g:syntastic_error_symbol = '✗'
let g:syntastic_warning_symbol = '⚠'
""whether to show balloons
let g:syntastic_enable_balloons = 1
nnoremap <F5> :YcmForceCompileAndDiagnostics<CR><CR>
""""""""""""FuzzyFinder""""""""""""""""""""
nnoremap <leader>f :FufCoverageFile!<CR>
let g:fuf_coveragefile_exclude = '\v\~$|\.(o|exe|dll|bak|orig|swp)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|.(svg|png|s|dot)$'
let g:fuf_coveragefile_prompt = '=>'

"""""""""""NERDTree""""""""""""
"切换显示NERDtree
nnoremap <leader>tt :NERDTreeToggle<CR>

"在NERDtree中找到当前文件的位置
nnoremap <leader>tf :NERDTreeFind<CR>

"将当前目录设置为NERDTree根节点
nnoremap <leader>tc :NERDTreeCWD<CR>

" If set to 1 then the CWD is changed when the NERD tree is first loaded to the
" directory it is initialized in.
let NERDTreeChDirMode = 1

" This option is used to specify which files the NERD tree should ignore.
" All files ending in .vim or ~ will be ignored.
" All dirs ending in ".d" to be ignored and all files ending in ".o" to be ignored.
let NERDTreeIgnore=['\.vim$', '\~$', '.d$[[dir]]', '.o$[[file]]']

" If this option is set to 1 then the bookmarks table will be displayed.
let NERDTreeShowBookmarks = 1

" Display line numbers for the NERD tree window.
let NERDTreeShowLineNumbers=1

""""""""""""Taglist""""""""""""""""""""
"let Tlist_Show_One_File = 1         "只显示当前文件的taglist，默认是显示多个
"let Tlist_Exit_OnlyWindow = 1          "如果taglist是最后一个窗口，则退出vim
"let Tlist_Use_Right_Window = 0         "在左侧窗口中显示taglist
""let Tlist_Auto_Open = 0         "在启动VIM后自动打开taglist窗口
"let Tlist_GainFocus_On_ToggleOpen = 1  "打开taglist时，光标保留在taglist窗口
"let Tlist_Ctags_Cmd='/usr/bin/ctags'  "设置ctags命令的位置
"nnoremap <leader>tl : Tlist<CR>        "设置关闭和打开taglist窗口的快捷键

nnoremap <leader>a :echo expand('%:p')<CR>

autocmd FileType c,cpp,cs,java          setlocal commentstring=//\ %s

""""""""""""Vim-markdown""""""""""""""""""""

" Add the following line to your '.vimrc' to disable the folding configuration:
let g:vim_markdown_folding_disabled = 1

" Highlight YAML front matter as used by Jekyll or Hugo [7].
let g:vim_markdown_frontmatter = 1

" gx: open the link under the cursor in the same browser as the standard gx command. 
" ]]: go to next header. <Plug>Markdown_MoveToNextHeader
" [[: go to previous header. Contrast with ]c. 
" ][: go to next sibling header if any. 
" []: go to previous sibling header if any. 
" ]c: go to Current header
" ]u: go to parent header (Up)

""""""""""""delimitMate""""""""""""""""""""
let b:delimitMate_quotes = "\" '"

""""""""""""按键备忘录""""""""""""""""""""

" ~ n 光标下的字符大小写切换
" # n 找到光标下的单词前一次出现的位置
" * n 找到光标下的单词后一次出现的位置
" ( n 句首位置
" ) n 下一个句子/句尾位置
" T n 跳转前一个字符的下一个位置(till)，例如找到Tg找到本行内光标前面的g
" S n 删除行并插入,等价于cc
" D n 删除到行尾，等价于d$
" F n 向前寻找字符
" H n 跳到屏幕第一行
" L n 跳到屏幕底部
" ' n 跳转到标签的行首
" C n 修改至行末,相当于c$
" M n 跳转到屏幕中部
" Ctrl-E n 下滚屏
" Ctrl-Y n 上滚屏
" gx n 打开光标下的链接
" gf n 打开光标下的文件

